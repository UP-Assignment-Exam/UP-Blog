<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Blog Platform</title>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/quill/1.3.7/quill.snow.min.css"
      rel="stylesheet"
    />
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
      }

      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
      }

      .header {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        padding: 20px;
        margin-bottom: 30px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
      }

      .nav {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 15px;
      }

      .nav-buttons {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
      }

      .nav-btn {
        background: linear-gradient(45deg, #667eea, #764ba2);
        color: white;
        border: none;
        padding: 12px 20px;
        border-radius: 25px;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 8px;
      }

      .nav-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
      }

      .nav-btn.active {
        background: linear-gradient(45deg, #ff6b6b, #ee5a24);
      }

      .content-section {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        padding: 30px;
        margin-bottom: 20px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        display: none;
      }

      .content-section.active {
        display: block;
        animation: fadeIn 0.5s ease;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .blog-card {
        background: white;
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        border-left: 4px solid transparent;
      }

      .blog-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        border-left-color: #667eea;
      }

      .blog-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 15px;
        flex-wrap: wrap;
        gap: 10px;
      }

      .blog-title {
        font-size: 1.5em;
        color: #333;
        margin-bottom: 8px;
      }

      .blog-meta {
        color: #666;
        font-size: 0.9em;
        display: flex;
        align-items: center;
        gap: 15px;
        flex-wrap: wrap;
      }

      .status-badge {
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 0.8em;
        font-weight: 600;
      }

      .status-published {
        background: #d4edda;
        color: #155724;
      }
      .status-draft {
        background: #f8d7da;
        color: #721c24;
      }
      .status-scheduled {
        background: #fff3cd;
        color: #856404;
      }

      .blog-content {
        color: #555;
        line-height: 1.6;
        margin-bottom: 20px;
      }

      .blog-actions {
        display: flex;
        gap: 15px;
        align-items: center;
        flex-wrap: wrap;
      }

      .action-btn {
        background: none;
        border: 1px solid #ddd;
        padding: 8px 15px;
        border-radius: 20px;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 5px;
        transition: all 0.3s ease;
        font-size: 0.9em;
      }

      .action-btn:hover {
        background: #f8f9fa;
        border-color: #667eea;
        color: #667eea;
      }

      .action-btn.active {
        background: #667eea;
        color: white;
        border-color: #667eea;
      }

      .comment-section {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        margin-top: 15px;
      }

      .comment {
        background: white;
        padding: 12px;
        border-radius: 8px;
        margin-bottom: 10px;
        border-left: 3px solid #667eea;
      }

      .comment-author {
        font-weight: 600;
        color: #333;
        margin-bottom: 5px;
      }

      .comment-text {
        color: #555;
        font-size: 0.9em;
      }

      .comment-form {
        display: flex;
        gap: 10px;
        margin-top: 15px;
      }

      .comment-input {
        flex: 1;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 20px;
        outline: none;
      }

      .comment-btn {
        background: #667eea;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 20px;
        cursor: pointer;
      }

      .user-profile {
        display: flex;
        align-items: center;
        gap: 15px;
        background: white;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
      }

      .avatar {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background: linear-gradient(45deg, #667eea, #764ba2);
        display: flex;
        items-center: center;
        justify-content: center;
        color: white;
        font-size: 2em;
        font-weight: bold;
      }

      .notification {
        background: white;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 10px;
        border-left: 4px solid #667eea;
        display: flex;
        align-items: center;
        gap: 15px;
      }

      .notification.unread {
        background: #f0f8ff;
      }

      .editor-container {
        background: white;
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 20px;
      }

      .form-group {
        margin-bottom: 20px;
      }

      .form-label {
        display: block;
        margin-bottom: 8px;
        font-weight: 600;
        color: #333;
      }

      .form-input {
        width: 100%;
        padding: 12px;
        border: 2px solid #e1e5e9;
        border-radius: 8px;
        font-size: 16px;
        transition: border-color 0.3s ease;
      }

      .form-input:focus {
        outline: none;
        border-color: #667eea;
      }

      .form-select {
        width: 100%;
        padding: 12px;
        border: 2px solid #e1e5e9;
        border-radius: 8px;
        font-size: 16px;
      }

      .publish-btn {
        background: linear-gradient(45deg, #667eea, #764ba2);
        color: white;
        border: none;
        padding: 15px 30px;
        border-radius: 25px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .publish-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
      }

      #editor {
        height: 300px;
      }

      .stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-top: 30px;
        margin-bottom: 30px;
      }

      .stat-card {
        background: white;
        padding: 20px;
        border-radius: 12px;
        text-align: center;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
      }

      .stat-number {
        font-size: 2em;
        font-weight: bold;
        color: #667eea;
      }

      .stat-label {
        color: #666;
        margin-top: 5px;
      }

      .theme-option {
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
        padding: 10px;
        border-radius: 10px;
      }

      .theme-option:hover {
        background: #f8f9fa;
        transform: translateY(-2px);
      }

      .theme-option.active .theme-preview {
        border-color: #667eea !important;
        box-shadow: 0 0 0 2px rgba(102, 126, 234, 0.3);
      }

      .theme-preview {
        cursor: pointer;
        transition: all 0.3s ease;
      }

      /* Theme variations */
      body.theme-sunset {
        background: linear-gradient(135deg, #ff7e5f 0%, #feb47b 100%);
      }

      body.theme-forest {
        background: linear-gradient(135deg, #134e5e 0%, #71b280 100%);
      }

      body.theme-purple {
        background: linear-gradient(135deg, #8360c3 0%, #2ebf91 100%);
      }

      body.theme-ocean {
        background: linear-gradient(135deg, #2980b9 0%, #6bb6ff 100%);
      }

      body.theme-dark {
        background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
      }

      body.theme-dark .header,
      body.theme-dark .content-section,
      body.theme-dark .blog-card,
      body.theme-dark .editor-container,
      body.theme-dark .user-profile,
      body.theme-dark .stat-card,
      body.theme-dark .notification {
        background: rgba(52, 73, 94, 0.95);
        color: #ecf0f1;
      }

      body.theme-dark .blog-title,
      body.theme-dark h1,
      body.theme-dark h2,
      body.theme-dark h3 {
        color: #ecf0f1;
      }

      body.theme-dark .form-input,
      body.theme-dark .form-select {
        background: #34495e;
        color: #ecf0f1;
        border-color: #5a6c7d;
      }
      .container {
        padding: 15px;
      }

      .nav {
        flex-direction: column;
        align-items: stretch;
      }

      .nav-buttons {
        justify-content: center;
      }

      .blog-header {
        flex-direction: column;
      }

      .blog-actions {
        justify-content: center;
      }
      /* } */
    </style>
  </head>
  <body>
    <div class="container">
      <div class="header">
        <nav class="nav">
          <h1 style="color: #333; font-size: 1.8em">
            <i class="fas fa-blog" style="color: #667eea"></i> BlogPlatform
          </h1>
          <div class="nav-buttons">
            <button class="nav-btn active" onclick="showSection('profile')">
              <i class="fas fa-user"></i> Profile
            </button>
            <button class="nav-btn" onclick="showSection('blogs')">
              <i class="fas fa-list"></i> All Blogs
            </button>
            <button class="nav-btn" onclick="showSection('notifications')">
              <i class="fas fa-bell"></i> Notifications
              <span
                id="notif-count"
                style="
                  background: #ff4757;
                  color: white;
                  border-radius: 50%;
                  padding: 2px 6px;
                  font-size: 0.8em;
                "
                >3</span
              >
            </button>
            <button class="nav-btn" onclick="showSection('create')">
              <i class="fas fa-plus"></i> Create Blog
            </button>
            <button class="nav-btn" onclick="showSection('settings')">
              <i class="fas fa-cog"></i> Settings
            </button>
            <button
              class="nav-btn"
              onclick="logout()"
              style="background: linear-gradient(45deg, #ff6b6b, #ee5a24)"
            >
              <i class="fas fa-sign-out-alt"></i> Logout
            </button>
          </div>
        </nav>
      </div>

      <!-- User Profile Section -->
      <div id="profile" class="content-section active">
        <h2 style="margin-bottom: 20px; color: #333">User Profile</h2>
        <div class="user-profile">
          <div class="avatar">JS</div>
          <div>
            <h3 style="color: #333; margin-bottom: 5px">John Smith</h3>
            <p style="color: #666; margin-bottom: 10px">
              Full Stack Developer & Tech Blogger
            </p>
            <p style="color: #666">📧 john.smith@email.com</p>
            <p style="color: #666">📅 Joined March 2024</p>
          </div>
        </div>

        <div class="stats">
          <div class="stat-card">
            <div class="stat-number">12</div>
            <div class="stat-label">Published Blogs</div>
          </div>
          <div class="stat-card">
            <div class="stat-number">3</div>
            <div class="stat-label">Draft Blogs</div>
          </div>
          <div class="stat-card">
            <div class="stat-number">248</div>
            <div class="stat-label">Total Likes</div>
          </div>
          <div class="stat-card">
            <div class="stat-number">89</div>
            <div class="stat-label">Comments</div>
          </div>
        </div>
      </div>

      <!-- All Blogs Section -->
      <div id="blogs" class="content-section">
        <h2 style="margin-bottom: 20px; color: #333">All Blogs</h2>

        <div class="blog-card">
          <div class="blog-header">
            <div>
              <h3 class="blog-title">Getting Started with Node.js</h3>
              <div class="blog-meta">
                <span><i class="fas fa-user"></i> John Smith</span>
                <span><i class="fas fa-calendar"></i> May 15, 2025</span>
                <span class="status-badge status-published">Published</span>
              </div>
            </div>
          </div>
          <div class="blog-content">
            <p>
              Node.js is a powerful JavaScript runtime built on Chrome's V8
              JavaScript engine. In this comprehensive guide, we'll explore how
              to get started with Node.js development, from installation to
              building your first application...
            </p>
          </div>
          <div class="blog-actions">
            <button class="action-btn" onclick="toggleLike(this)">
              <i class="far fa-heart"></i> <span>24</span>
            </button>
            <button class="action-btn" onclick="toggleFavorite(this)">
              <i class="far fa-bookmark"></i> Favorite
            </button>
            <button class="action-btn" onclick="toggleComments(this)">
              <i class="far fa-comment"></i> Comments (5)
            </button>
          </div>
          <div class="comment-section" style="display: none">
            <div class="comment">
              <div class="comment-author">Alice Johnson</div>
              <div class="comment-text">
                Great tutorial! Very helpful for beginners.
              </div>
            </div>
            <div class="comment">
              <div class="comment-author">Bob Wilson</div>
              <div class="comment-text">
                Thanks for sharing this. Looking forward to more Node.js
                content!
              </div>
            </div>
            <div class="comment-form">
              <input
                type="text"
                class="comment-input"
                placeholder="Add a comment..."
              />
              <button class="comment-btn" onclick="addComment(this)">
                Post
              </button>
            </div>
          </div>
        </div>

        <div class="blog-card">
          <div class="blog-header">
            <div>
              <h3 class="blog-title">Understanding React Hooks</h3>
              <div class="blog-meta">
                <span><i class="fas fa-user"></i> Sarah Davis</span>
                <span><i class="fas fa-calendar"></i> May 20, 2025</span>
                <span class="status-badge status-published">Published</span>
              </div>
            </div>
          </div>
          <div class="blog-content">
            <p>
              React Hooks revolutionized how we write React components. This
              article dives deep into useState, useEffect, and custom hooks,
              providing practical examples and best practices...
            </p>
          </div>
          <div class="blog-actions">
            <button class="action-btn" onclick="toggleLike(this)">
              <i class="far fa-heart"></i> <span>18</span>
            </button>
            <button class="action-btn" onclick="toggleFavorite(this)">
              <i class="far fa-bookmark"></i> Favorite
            </button>
            <button class="action-btn" onclick="toggleComments(this)">
              <i class="far fa-comment"></i> Comments (3)
            </button>
          </div>
          <div class="comment-section" style="display: none">
            <div class="comment">
              <div class="comment-author">Mike Chen</div>
              <div class="comment-text">
                Excellent explanation of hooks! This cleared up my confusion.
              </div>
            </div>
            <div class="comment-form">
              <input
                type="text"
                class="comment-input"
                placeholder="Add a comment..."
              />
              <button class="comment-btn" onclick="addComment(this)">
                Post
              </button>
            </div>
          </div>
        </div>

        <div class="blog-card">
          <div class="blog-header">
            <div>
              <h3 class="blog-title">CSS Grid vs Flexbox</h3>
              <div class="blog-meta">
                <span><i class="fas fa-user"></i> John Smith</span>
                <span><i class="fas fa-calendar"></i> June 5, 2025</span>
                <span class="status-badge status-draft">Draft</span>
              </div>
            </div>
          </div>
          <div class="blog-content">
            <p>
              When should you use CSS Grid vs Flexbox? This comprehensive
              comparison will help you make the right choice for your layout
              needs...
            </p>
          </div>
          <div class="blog-actions">
            <button class="action-btn" onclick="toggleLike(this)">
              <i class="far fa-heart"></i> <span>0</span>
            </button>
            <button class="action-btn" onclick="toggleFavorite(this)">
              <i class="far fa-bookmark"></i> Favorite
            </button>
            <button class="action-btn" onclick="toggleComments(this)">
              <i class="far fa-comment"></i> Comments (0)
            </button>
          </div>
          <div class="comment-section" style="display: none">
            <div class="comment-form">
              <input
                type="text"
                class="comment-input"
                placeholder="Add a comment..."
              />
              <button class="comment-btn" onclick="addComment(this)">
                Post
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- Notifications Section -->
      <div id="notifications" class="content-section">
        <h2 style="margin-bottom: 20px; color: #333">Notifications</h2>

        <div class="notification unread">
          <i class="fas fa-heart" style="color: #e74c3c"></i>
          <div>
            <strong>Sarah Davis</strong> liked your blog post "Getting Started
            with Node.js" <br /><small style="color: #666">2 hours ago</small>
          </div>
        </div>

        <div class="notification unread">
          <i class="fas fa-comment" style="color: #3498db"></i>
          <div>
            <strong>Mike Chen</strong> commented on your blog post
            "Understanding React Hooks" <br /><small style="color: #666"
              >5 hours ago</small
            >
          </div>
        </div>

        <div class="notification unread">
          <i class="fas fa-user-plus" style="color: #2ecc71"></i>
          <div>
            <strong>Alex Rodriguez</strong> started following you <br /><small
              style="color: #666"
              >1 day ago</small
            >
          </div>
        </div>

        <div class="notification">
          <i class="fas fa-bookmark" style="color: #f39c12"></i>
          <div>
            <strong>Emma Wilson</strong> added your blog to favorites
            <br /><small style="color: #666">2 days ago</small>
          </div>
        </div>
      </div>

      <!-- Create Blog Section -->
      <div id="create" class="content-section">
        <h2 style="margin-bottom: 20px; color: #333">Create New Blog Post</h2>

        <div class="editor-container">
          <form id="blogForm">
            <div class="form-group">
              <label class="form-label" for="blogTitle">Blog Title</label>
              <input
                type="text"
                id="blogTitle"
                class="form-input"
                placeholder="Enter blog title..."
              />
            </div>

            <div class="form-group">
              <label class="form-label" for="blogContent">Content</label>
              <div id="editor"></div>
            </div>

            <div
              style="
                display: grid;
                grid-template-columns: 1fr 1fr;
                gap: 20px;
                margin-bottom: 20px;
              "
            >
              <div class="form-group">
                <label class="form-label" for="blogStatus">Status</label>
                <select id="blogStatus" class="form-select">
                  <option value="draft">Draft</option>
                  <option value="published">Published</option>
                  <option value="scheduled">Scheduled</option>
                </select>
              </div>

              <div class="form-group">
                <label class="form-label" for="scheduleDate"
                  >Schedule Date (if applicable)</label
                >
                <input
                  type="datetime-local"
                  id="scheduleDate"
                  class="form-input"
                />
              </div>
            </div>

            <button type="button" class="publish-btn" onclick="publishBlog()">
              <i class="fas fa-paper-plane"></i> Publish Blog
            </button>
          </form>
        </div>
      </div>

      <!-- Edit Profile Section -->
      <div id="edit-profile" class="content-section">
        <h2 style="margin-bottom: 20px; color: #333">Edit Profile</h2>

        <div class="editor-container">
          <form id="profileForm">
            <div class="form-group">
              <label class="form-label" for="editName">Full Name</label>
              <input
                type="text"
                id="editName"
                class="form-input"
                value="John Smith"
              />
            </div>

            <div class="form-group">
              <label class="form-label" for="editEmail">Email</label>
              <input
                type="email"
                id="editEmail"
                class="form-input"
                value="john.smith@email.com"
              />
            </div>

            <div class="form-group">
              <label class="form-label" for="editBio">Bio</label>
              <textarea
                id="editBio"
                class="form-input"
                rows="4"
                placeholder="Tell us about yourself..."
              >
Full Stack Developer & Tech Blogger</textarea
              >
            </div>

            <div class="form-group">
              <label class="form-label" for="editWebsite">Website</label>
              <input
                type="url"
                id="editWebsite"
                class="form-input"
                placeholder="https://yourwebsite.com"
              />
            </div>

            <div class="form-group">
              <label class="form-label" for="editLocation">Location</label>
              <input
                type="text"
                id="editLocation"
                class="form-input"
                placeholder="Your location"
              />
            </div>

            <div style="display: flex; gap: 15px; flex-wrap: wrap">
              <button type="button" class="publish-btn" onclick="saveProfile()">
                <i class="fas fa-save"></i> Save Changes
              </button>
              <button
                type="button"
                class="nav-btn"
                onclick="showSection('profile')"
              >
                <i class="fas fa-times"></i> Cancel
              </button>
            </div>
          </form>
        </div>
      </div>

      <!-- Settings Section -->
      <div id="settings" class="content-section">
        <h2 style="margin-bottom: 20px; color: #333">Settings</h2>

        <div class="editor-container">
          <h3 style="margin-bottom: 15px; color: #333">Appearance</h3>

          <div class="form-group">
            <label class="form-label">Background Theme</label>
            <div
              style="
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
                gap: 15px;
                margin-top: 10px;
              "
            >
              <div
                class="theme-option"
                data-theme="default"
                onclick="changeTheme('default')"
              >
                <div
                  style="
                    height: 60px;
                    background: linear-gradient(
                      135deg,
                      #667eea 0%,
                      #764ba2 100%
                    );
                    border-radius: 8px;
                    margin-bottom: 8px;
                    border: 3px solid transparent;
                  "
                  class="theme-preview"
                ></div>
                <span style="font-size: 0.9em; color: #333">Default Blue</span>
              </div>

              <div
                class="theme-option"
                data-theme="sunset"
                onclick="changeTheme('sunset')"
              >
                <div
                  style="
                    height: 60px;
                    background: linear-gradient(
                      135deg,
                      #ff7e5f 0%,
                      #feb47b 100%
                    );
                    border-radius: 8px;
                    margin-bottom: 8px;
                    border: 3px solid transparent;
                  "
                  class="theme-preview"
                ></div>
                <span style="font-size: 0.9em; color: #333">Sunset Orange</span>
              </div>

              <div
                class="theme-option"
                data-theme="forest"
                onclick="changeTheme('forest')"
              >
                <div
                  style="
                    height: 60px;
                    background: linear-gradient(
                      135deg,
                      #134e5e 0%,
                      #71b280 100%
                    );
                    border-radius: 8px;
                    margin-bottom: 8px;
                    border: 3px solid transparent;
                  "
                  class="theme-preview"
                ></div>
                <span style="font-size: 0.9em; color: #333">Forest Green</span>
              </div>

              <div
                class="theme-option"
                data-theme="purple"
                onclick="changeTheme('purple')"
              >
                <div
                  style="
                    height: 60px;
                    background: linear-gradient(
                      135deg,
                      #667eea 0%,
                      #764ba2 100%
                    );
                    border-radius: 8px;
                    margin-bottom: 8px;
                    border: 3px solid transparent;
                  "
                  class="theme-preview"
                ></div>
                <span style="font-size: 0.9em; color: #333">Purple Dream</span>
              </div>

              <div
                class="theme-option"
                data-theme="ocean"
                onclick="changeTheme('ocean')"
              >
                <div
                  style="
                    height: 60px;
                    background: linear-gradient(
                      135deg,
                      #2980b9 0%,
                      #6bb6ff 100%
                    );
                    border-radius: 8px;
                    margin-bottom: 8px;
                    border: 3px solid transparent;
                  "
                  class="theme-preview"
                ></div>
                <span style="font-size: 0.9em; color: #333">Ocean Blue</span>
              </div>

              <div
                class="theme-option"
                data-theme="dark"
                onclick="changeTheme('dark')"
              >
                <div
                  style="
                    height: 60px;
                    background: linear-gradient(
                      135deg,
                      #2c3e50 0%,
                      #34495e 100%
                    );
                    border-radius: 8px;
                    margin-bottom: 8px;
                    border: 3px solid transparent;
                  "
                  class="theme-preview"
                ></div>
                <span style="font-size: 0.9em; color: #333">Dark Mode</span>
              </div>
            </div>
          </div>

          <hr
            style="margin: 30px 0; border: none; border-top: 1px solid #e1e5e9"
          />

          <h3 style="margin-bottom: 15px; color: #333">Preferences</h3>

          <div class="form-group">
            <label
              style="
                display: flex;
                align-items: center;
                gap: 10px;
                cursor: pointer;
              "
            >
              <input type="checkbox" id="emailNotifications" checked />
              <span>Email notifications for new comments</span>
            </label>
          </div>

          <div class="form-group">
            <label
              style="
                display: flex;
                align-items: center;
                gap: 10px;
                cursor: pointer;
              "
            >
              <input type="checkbox" id="likeNotifications" checked />
              <span>Email notifications for likes</span>
            </label>
          </div>

          <div class="form-group">
            <label
              style="
                display: flex;
                align-items: center;
                gap: 10px;
                cursor: pointer;
              "
            >
              <input type="checkbox" id="followNotifications" checked />
              <span>Email notifications for new followers</span>
            </label>
          </div>

          <button type="button" class="publish-btn" onclick="saveSettings()">
            <i class="fas fa-save"></i> Save Settings
          </button>
        </div>
      </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/quill/1.3.7/quill.min.js"></script>
    <script>
      // Initialize Quill editor
      let quill

      // Sample data
      let userData = {
        name: 'John Smith',
        email: 'john.smith@email.com',
        bio: 'Full Stack Developer & Tech Blogger',
        website: '',
        location: '',
        joinDate: 'March 2024',
        stats: {
          published: 12,
          drafts: 3,
          likes: 248,
          comments: 89
        }
      }

      let userSettings = {
        theme: 'default',
        emailNotifications: true,
        likeNotifications: true,
        followNotifications: true
      }

      // Load saved settings on page load
      function loadUserSettings() {
        const savedTheme = userSettings.theme
        if (savedTheme && savedTheme !== 'default') {
          document.body.className = `theme-${savedTheme}`
          document
            .querySelector(`[data-theme="${savedTheme}"]`)
            .classList.add('active')
        } else {
          document
            .querySelector('[data-theme="default"]')
            .classList.add('active')
        }
      }

      // Navigation
      function showSection(sectionId) {
        // Hide all sections
        document.querySelectorAll('.content-section').forEach(section => {
          section.classList.remove('active')
        })

        // Remove active class from all nav buttons
        document.querySelectorAll('.nav-btn').forEach(btn => {
          btn.classList.remove('active')
        })

        // Show selected section
        document.getElementById(sectionId).classList.add('active')

        // Add active class to clicked button
        event.target.classList.add('active')

        // Initialize editor when create section is shown
        if (sectionId === 'create' && !quill) {
          initializeEditor()
        }
      }

      // Initialize rich text editor
      function initializeEditor() {
        const toolbarOptions = [
          ['bold', 'italic', 'underline', 'strike'],
          ['blockquote', 'code-block'],
          [{ header: 1 }, { header: 2 }],
          [{ list: 'ordered' }, { list: 'bullet' }],
          [{ script: 'sub' }, { script: 'super' }],
          [{ indent: '-1' }, { indent: '+1' }],
          [{ direction: 'rtl' }],
          [{ size: ['small', false, 'large', 'huge'] }],
          [{ header: [1, 2, 3, 4, 5, 6, false] }],
          [{ color: [] }, { background: [] }],
          [{ font: [] }],
          [{ align: [] }],
          ['clean'],
          ['link', 'image', 'video']
        ]

        quill = new Quill('#editor', {
          modules: {
            toolbar: toolbarOptions
          },
          theme: 'snow'
        })
      }

      // Blog interactions
      function toggleLike(button) {
        const icon = button.querySelector('i')
        const count = button.querySelector('span')
        let currentCount = parseInt(count.textContent)

        if (icon.classList.contains('far')) {
          icon.classList.remove('far')
          icon.classList.add('fas')
          icon.style.color = '#e74c3c'
          button.classList.add('active')
          count.textContent = currentCount + 1
        } else {
          icon.classList.remove('fas')
          icon.classList.add('far')
          icon.style.color = ''
          button.classList.remove('active')
          count.textContent = currentCount - 1
        }
      }

      function toggleFavorite(button) {
        const icon = button.querySelector('i')

        if (icon.classList.contains('far')) {
          icon.classList.remove('far')
          icon.classList.add('fas')
          icon.style.color = '#f39c12'
          button.classList.add('active')
          button.innerHTML = '<i class="fas fa-bookmark"></i> Favorited'
        } else {
          icon.classList.remove('fas')
          icon.classList.add('far')
          icon.style.color = ''
          button.classList.remove('active')
          button.innerHTML = '<i class="far fa-bookmark"></i> Favorite'
        }
      }

      function toggleComments(button) {
        const blogCard = button.closest('.blog-card')
        const commentSection = blogCard.querySelector('.comment-section')

        if (commentSection.style.display === 'none') {
          commentSection.style.display = 'block'
          button.classList.add('active')
        } else {
          commentSection.style.display = 'none'
          button.classList.remove('active')
        }
      }

      function addComment(button) {
        const commentInput = button.previousElementSibling
        const commentText = commentInput.value.trim()

        if (commentText) {
          const commentSection = button.closest('.comment-section')
          const commentForm = button.closest('.comment-form')

          // Create new comment element
          const newComment = document.createElement('div')
          newComment.className = 'comment'
          newComment.innerHTML = `
                    <div class="comment-author">You</div>
                    <div class="comment-text">${commentText}</div>
                `

          // Insert before the comment form
          commentSection.insertBefore(newComment, commentForm)

          // Clear input
          commentInput.value = ''

          // Update comment count in button
          const blogCard = commentSection.closest('.blog-card')
          const commentButton = blogCard.querySelector('.action-btn:last-child')
          const currentText = commentButton.textContent
          const currentCount = parseInt(currentText.match(/\d+/)[0])
          commentButton.innerHTML = `<i class="far fa-comment"></i> Comments (${
            currentCount + 1
          })`
        }
      }

      function publishBlog() {
        const title = document.getElementById('blogTitle').value
        const content = quill.getText()
        const status = document.getElementById('blogStatus').value
        const scheduleDate = document.getElementById('scheduleDate').value

        if (!title.trim()) {
          alert('Please enter a blog title')
          return
        }

        if (!content.trim()) {
          alert('Please enter blog content')
          return
        }

        // Simulate publishing
        alert(
          `Blog "${title}" has been ${
            status === 'published' ? 'published' : 'saved as ' + status
          }!`
        )

        // Reset form
        document.getElementById('blogTitle').value = ''
        quill.setText('')
        document.getElementById('blogStatus').value = 'draft'
        document.getElementById('scheduleDate').value = ''
      }

      // Profile management
      function saveProfile() {
        const name = document.getElementById('editName').value
        const email = document.getElementById('editEmail').value
        const bio = document.getElementById('editBio').value
        const website = document.getElementById('editWebsite').value
        const location = document.getElementById('editLocation').value

        if (!name.trim() || !email.trim()) {
          alert('Name and email are required fields')
          return
        }

        // Update userData
        userData.name = name
        userData.email = email
        userData.bio = bio
        userData.website = website
        userData.location = location

        // Update profile display
        updateProfileDisplay()

        alert('Profile updated successfully!')
        showSection('profile')
      }

      function updateProfileDisplay() {
        // Update profile section
        const profileSection = document.getElementById('profile')
        const profileInfo = profileSection.querySelector('.user-profile div')
        profileInfo.innerHTML = `
                <h3 style="color: #333; margin-bottom: 5px;">${
                  userData.name
                }</h3>
                <p style="color: #666; margin-bottom: 10px;">${userData.bio}</p>
                <p style="color: #666;">📧 ${userData.email}</p>
                <p style="color: #666;">📅 Joined ${userData.joinDate}</p>
                ${
                  userData.website
                    ? `<p style="color: #666;">🌐 <a href="${userData.website}" target="_blank" style="color: #667eea;">${userData.website}</a></p>`
                    : ''
                }
                ${
                  userData.location
                    ? `<p style="color: #666;">📍 ${userData.location}</p>`
                    : ''
                }
            `
      }

      // Theme management
      function changeTheme(themeName) {
        // Remove active class from all theme options
        document.querySelectorAll('.theme-option').forEach(option => {
          option.classList.remove('active')
        })

        // Add active class to selected theme
        document
          .querySelector(`[data-theme="${themeName}"]`)
          .classList.add('active')

        // Apply theme to body
        document.body.className =
          themeName === 'default' ? '' : `theme-${themeName}`

        // Save theme preference
        userSettings.theme = themeName

        // Show feedback
        const feedback = document.createElement('div')
        feedback.style = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: #2ecc71;
                color: white;
                padding: 10px 20px;
                border-radius: 25px;
                z-index: 1000;
                animation: slideIn 0.3s ease;
            `
        feedback.textContent = 'Theme changed successfully!'
        document.body.appendChild(feedback)

        setTimeout(() => {
          feedback.remove()
        }, 2000)
      }

      function saveSettings() {
        userSettings.emailNotifications =
          document.getElementById('emailNotifications').checked
        userSettings.likeNotifications =
          document.getElementById('likeNotifications').checked
        userSettings.followNotifications = document.getElementById(
          'followNotifications'
        ).checked

        alert('Settings saved successfully!')
      }

      // Logout function
      function logout() {
        if (confirm('Are you sure you want to logout?')) {
          alert('Logging out... Redirecting to login page.')
          // In a real application, this would redirect to login page
          // window.location.href = '/login';
        }
      }

      // Initialize the page
      document.addEventListener('DOMContentLoaded', function () {
        // Load user settings
        loadUserSettings()

        // Mark all notifications as read after viewing
        setTimeout(() => {
          document.querySelectorAll('.notification.unread').forEach(notif => {
            notif.classList.remove('unread')
          })
          document.getElementById('notif-count').style.display = 'none'
        }, 3000)

        // Add slide-in animation style
        const style = document.createElement('style')
        style.textContent = `
                @keyframes slideIn {
                    from { transform: translateX(100%); opacity: 0; }
                    to { transform: translateX(0); opacity: 1; }
                }
            `
        document.head.appendChild(style)
      })
    </script>
  </body>
</html>
